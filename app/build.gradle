plugins {
	id "com.android.application"
	id "kotlin-android"
	id "kotlin-android-extensions"
	id "kotlin-kapt"
	id "dagger.hilt.android.plugin"
}

android {
	compileSdkVersion 30
	buildToolsVersion "30.0.3"

	def _versionCode = 1
	def versionPropsFile = file("version.properties")
	Properties versionProps = new Properties()
	if (versionPropsFile.exists())
		versionProps.load(new FileInputStream(versionPropsFile))
	def _patch = (versionProps["PATCH"] ?: "0").toInteger() + 1
	def _major = (versionProps["MAJOR"] ?: "0").toInteger()
	def _minor = (versionProps["MINOR"] ?: "0").toInteger()
	List<String> runTasks = gradle.startParameter.getTaskNames()
	def value = 0
	for (String item : runTasks)
		if (item.contains("assembleRelease")) {
			value = 1
		}
	_versionCode = (versionProps["VERSION_CODE"] ?: "1").toInteger() + value
	if (_patch == 99999) {
		_patch = 0
		_minor = _minor + 1
	}
	if (_major == 99) {
		_major = 0
		_major = _major + 1
	}

	versionProps["MAJOR"] = _major.toString()
	versionProps["MINOR"] = _minor.toString()
	versionProps["PATCH"] = _patch.toString()
	versionProps["VERSION_CODE"] = _versionCode.toString()
	versionProps.store(versionPropsFile.newWriter(), null)
	def _versionName = "${_major}.${_versionCode}.${_minor}.${_patch}"

	defaultConfig {
		applicationId "com.codingwithmitch.openapi"
		minSdkVersion 21
		targetSdkVersion 30
		versionCode _versionCode
		versionName _versionName
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
						"room.schemaLocation": "$projectDir/schemas".toString(),
						"room.incremental"   : "true"]
			}
		}

	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
		}
	}

	compileOptions {
		sourceCompatibility = "1.8"
		targetCompatibility = "1.8"
	}

	tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
		kotlinOptions {
			jvmTarget = "1.8"
		}
	}

	androidExtensions {
		experimental = true
	}
}

dependencies {
	implementation fileTree(dir: "libs", include: ["*.jar"])
	implementation "androidx.appcompat:appcompat:1.4.0-alpha02"
	implementation "androidx.core:core-ktx:1.5.0"
	implementation "androidx.constraintlayout:constraintlayout:2.0.4"
	implementation "androidx.legacy:legacy-support-v4:1.0.0"

	def fragment = '1.4.0-alpha04'
	implementation "androidx.fragment:fragment-ktx:$fragment"

	// -- Retrofit2
	def retrofit2_version = '2.9.0'
	implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
	implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

	// -- Lifecycle Components (ViewModel, LiveData and ReactiveStreams)
	def lifecycle_version = '2.4.0-alpha02'
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
	kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

	// -- Coroutines
	def coroutines_version = '1.5.0'
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

	// LiveData Coroutines
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

	// -- Room
	def room_version = '2.3.0'
	implementation "androidx.room:room-runtime:$room_version"
	kapt "androidx.room:room-compiler:$room_version"
	// Kotlin Extensions and Coroutines support for Room
	implementation "androidx.room:room-ktx:$room_version"

	def hilt = '2.37'
	implementation "com.google.dagger:hilt-android:$hilt"
	kapt "com.google.dagger:hilt-compiler:$hilt"

	def hilt_lifecycle_viewmodel = '1.0.0-alpha03'
	implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"

	def hilt_extension_compiler = "1.0.0"
	implementation "androidx.hilt:hilt-compiler:$hilt_extension_compiler"

	// Fragment
	implementation "androidx.fragment:fragment-ktx:$fragment_version"

	// jetpack navigation component
	def nav_version = "2.4.0-alpha03"
	implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
	implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
	implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"

	def material_version = '1.4.0-rc01'
	implementation "com.google.android.material:material:$material_version"

	// material dialogs
	def material_dialogs_version = '3.3.0'
	implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"

	// Leak Canary
	def leak_canary_version = '2.7'
	debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

	// Card View
	def cardview_version = "1.0.0"
	implementation "androidx.cardview:cardview:$cardview_version"

	// Recyclerview
	def recyclerview_version = '1.2.1'
	implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

//    //glide
	def glide_version = '4.12.0'
	implementation "com.github.bumptech.glide:glide:$glide_version"
	kapt "com.github.bumptech.glide:compiler:$glide_version"

	// Android-Image-Cropper
	def android_image_cropper_version = "3.1.1"
	implementation "com.github.CanHub:Android-Image-Cropper:$android_image_cropper_version"
}

